name: Python package

on: [push]

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install and set up Poetry
      run: |
        pipx install poetry
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry install
    - name: Test
      run: |
        source $HOME/.poetry/env
        poetry run test
    - name: Build
      run: |
        source $HOME/.poetry/env
        poetry run pyinstaller --onefile --windowed --hidden-import='PIL._tkinter_finder' inbac/inbac.py
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
          name: inbac-${{ runner.os }}
          path: dist

  Windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install and set up Poetry
      run: |
        pipx install poetry
        poetry config virtualenvs.in-project true
    - name: Install dependencies
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry install
    - name: Test
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry run test
    - name: Build
      run: |
        $env:Path += ";$env:Userprofile\.poetry\bin"
        poetry run pyinstaller --onefile --windowed --hidden-import='PIL._tkinter_finder' inbac\inbac.py
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
          name: inbac-${{ runner.os }}
          path: dist

  MacOS:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install and set up Poetry
      run: |
        pipx install poetry
        poetry config virtualenvs.in-project true
    - name: Set up cache
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      run: |
        source $HOME/.poetry/env
        poetry install
    - name: Test
      run: |
        source $HOME/.poetry/env
        poetry run test
    - name: Build
      run: |
        source $HOME/.poetry/env
        poetry run pyinstaller --onefile --windowed --hidden-import='PIL._tkinter_finder' inbac/inbac.py
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
          name: inbac-${{ runner.os }}
          path: dist
